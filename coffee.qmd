---
title: "James Hoffman: Analysis of 'The Great American Coffee Taste Test Live Stream'"
format:
  html:
    embed-resources: true
execute: 
  echo: false
  warning: false
fig-cap-location: top
tbl-cap-location: top
editor: 
  markdown: 
    wrap: 72
---
wordcloud c - adjust size
change h2 color
gt font size
1:56 compare gender to whole population lots more
polarizing, esp in females 1543 national coffee pour over and light
roast preference
subcap instead of caption?
italic for word cloud title

"what_is_your_favorite_coffee_drink"
"before_today_s_tasting_which_of_the_following_best_described_what_kind_of_coffee_you_like"
"What.roast.level.of.coffee.do.you.prefer."
Price of these drinks??
pour-over - more likely to drink black?
perceived acid and roast level - relationship?

correlation bwn actual pref vs taste pref. roast level can be ambiguous

preference by expertise level

https://colorbrewer2.org/#type=qualitative&scheme=Set2&n=3
https://www.infoworld.com/video/108579/r-colors-and-palettes-tips-and-tools
q\
https://cran.r-project.org/web/packages/colorspace/
<br>
------------------------------------------------------------------------

```{r}
library(ggplot2)
library(dplyr)
library(plotly)
library(gt)
library(gtExtras)
library(data.table)
library(scales)
source("coffee_functions.R")
source("theme_functions.R")
```

```{r}
df = read.csv("data/GACTT_RESULTS_ANONYMIZED_v2.csv") |> janitor::clean_names()
setDT(df)
cup_notes = readxl::read_xlsx("data/coffee-flavors_lexicon.xlsx")

age_groups =  c("<18 years old", "18-24 years old", "25-34 years old", "35-44 years old", "45-54 years old", "55-64 years old", ">65 years old", "Unknown") 
cup_groups = c("0-1 cups", "2-3 cups", "4 or More")

df = df |> mutate_at(
  c(
    "what_is_your_age",
    "how_many_cups_of_coffee_do_you_typically_drink_per_day",
    # "total_cups",
    "gender"
  ),
  ~ ifelse(. == "", "Unknown", .)
) |>  mutate(
  total_cups = recode(
    how_many_cups_of_coffee_do_you_typically_drink_per_day,
    "Less than 1" = "0-1 cups",
    "1" = "0-1 cups",
    "2" = "2-3 cups",
    "3" = "2-3 cups",
    "4" = "4 or More",
    "More than 4" = "4 or More"
  ),
  total_cups = factor(total_cups, levels = cup_groups),
  what_is_your_age = factor(what_is_your_age, levels = age_groups),
  exp_group = cut(
    lastly_how_would_you_rate_your_own_coffee_expertise,
    c(0, 2, 4, 6, 8, 10),
    c("1-2", "3-4", "5-6", "7-8", "9-10"),
    include.lowest = TRUE
  ),
  spend_each_month = recode(
    in_total_much_money_do_you_typically_spend_on_coffee_in_a_month,
    "$20-$40" = "$20-$60" ,
    "$40-$60" = "$20-$60",
    "$60-$80" = ">$60",
    "$80-$100" = ">$60",
    ">$100" = ">$60"
  ),
  spend_5_years = recode(
    approximately_how_much_have_you_spent_on_coffee_equipment_in_the_past_5_years,
    "Less than $20" = "<$100",
    "$20-$50" = "<$100",
    "$50-$100" = "<$100",
    "$100-$300" = "$100-$1000",
    "$300-$500" = "$100-$1000",
    "$500-$1000" = "$100-$1000"
  )
)
# MONEY SPENT
money = c("<$20", "$20-$60" , ">$60")
money_month = c("<$100", "$100-$1000", "More than $1,000")

df_money = df |> filter(in_total_much_money_do_you_typically_spend_on_coffee_in_a_month  != "") |> mutate(in_total_much_money_do_you_typically_spend_on_coffee_in_a_month = factor(in_total_much_money_do_you_typically_spend_on_coffee_in_a_month , levels = money))
```

The "Great America Taste Test" is what coffee expert and British YouTuber James
Hoffman called the live stream coffee tasting event held in October
2023. 5,000 Americans participated in this simultaneous coffee sipping event where each participant tasted the same four coffees.

Participants were filled out a survey - so let's analyze the results! I performed a text analysis of the coffees tasted and looked at the demographics and coffee habits of the participants.

Here I looked at standard bitterness and acidity in each coffee then I wen

![](assets/maxresdefault.jpg){.centerimg height=250px}

## The Four Coffees

Participants tasted four different coffees with different roasts ranging from light to dark. To ensure every participant tasted nearly the exact same coffee profile, coffee pods were shipped flash frozen liquid of concentrated coffee, needing only to add hot water.

```{r}
coffee_types = data.frame(Coffee = c("Coffee A", "Coffee B", "Coffee C", "Coffee D"), "Roast Level" = c("Light", "Medium", "Dark", "Light"), Origin = c("Single - Kenya", "Multiple - Blend", "Multiple - Blend", "Single - Columbia"))
coffee_types |> gt() |> gt_theme_538() |> gt_add_coffee_color("Coffee")
```

The chart above shows the 4 coffees: 3 coffees with roast levels of light, medium, and dark along and then a 4th Coffee, [Coffee D]{.coffeed}, a light roast coffee but with a unique processing method - anaerobic natural process - this tends to give the coffee a heavy fruity and fermented taste.
<br>
Based on these four coffees, how do you think the tastes will compare? Which would you think are more bitter or more acidic?

## Demographics / Traits

Nearly 3 out of 4 (74%) participants were between ages 25 and 44 years while participants were overwhelming male at 62%. While James Hoffman is popular coffee expert on YouTube, overall YouTube demographics leans female (51%) and worldwide only 37% are between the ages of 25-44.[^1][^2] This suggests Jame's audience tend to be young and male.

Interestingly, we see a trend in drinking more cups of coffee per day as one ages. Who said college students drink lots of coffee, maybe we should say it's the retirees who drink far more?

```{r}
#| fig-height: 3
#| fig-cap: Participants by Gender
df |> count(gender) |> mutate(perc = n / sum(n)) |> ggplot(aes(reorder(gender, n), perc)) + geom_bar(stat = 'identity', fill = "steelblue") + coord_flip() + theme_coffee() + geom_text(
          aes(label = scales::percent(perc, accuracy = 1)),
          color = "steelblue",
          fontface = "bold",
          hjust = -0.4
        ) + 
        scale_y_continuous(
          expand = c(0, 0),
          limits = c(0, .68),
          labels = scales::percent
        ) + theme(panel.grid.major.y = element_blank())

# df |> filter(what_is_your_age == "Unknown" | is.na(total_cups)) n = 100
# Combine these 2 tables
age_cups_per_day = df |> 
  filter(!is.na(what_is_your_age), !is.na(total_cups)) |> 
  group_by(what_is_your_age) |> 
  count(total_cups, .drop = FALSE) |> 
  reframe(cup_perc = n / sum(n)) |> 
  group_by(what_is_your_age) |> 
  reframe(list_data = list(cup_perc))

age_counts = df |> 
  filter(!is.na(what_is_your_age), !is.na(total_cups)) |> 
  count(what_is_your_age) |> mutate(perc = n * 100 / sum(n), what_is_your_age = factor(what_is_your_age, age_groups))
```

```{r }
#| tbl-cap: Participant Age and Daily Drinking Habits

left_join(age_counts, age_cups_per_day, by = join_by(what_is_your_age)) |> gt() |> gt_plt_bar_stack(list_data, labels = cup_groups, fmt_fn = scales::label_percent(accuracy = 1), width = 100) |> gt_theme_538() |> gt_plt_bar_pct(column = perc, scaled = TRUE, fill = "blue", labels = TRUE, decimals = 0, width = 100, font_size = "12px") |> gt::cols_label("what_is_your_age" = "Age Group", "perc" = "Age Group Prop") |>  gt::tab_footnote("93 participants were removed due to null response values.")
```

## Coffee Spending Habits
Participants were asked to rate one's own coffee expertise on a scale of 1 - 10. Not surprisingly, we see participants lean towards the upper half with nearly half (45%) rating themselves as a 6 or 7. However, there is still a significant number on the lower end and very few at a 9 or 10, pulling the overall average down to 5.7. As to more easily compare these groups, I binned the 'Expertise'. Now, the '5-6' and '7-8' groups represent similar proportion of participants with only 3% in the '9-10' Expertise. 
<br>
```{r}
#| layout-ncol: 2
#| fig-height: 4
#| fig-cap:
#|   - "Self-Rated Coffee Expertise"
#|   - "Caption 2"
#| fig-subcap:
#|   - Self-Rated Coffee Expertise
#|   - Combined Coffee Expertise Groups
# Mean
# df[,mean(lastly_how_would_you_rate_your_own_coffee_expertise, na.rm=TRUE)]
# df[lastly_how_would_you_rate_your_own_coffee_expertise %in% c(6,7), .N] / nrow(df |> filter(!is.na(exp_group)) )
df |> filter(!is.na(exp_group)) |> count(lastly_how_would_you_rate_your_own_coffee_expertise) |> mutate(perc = n / sum(n), lastly_how_would_you_rate_your_own_coffee_expertise = factor(lastly_how_would_you_rate_your_own_coffee_expertise, levels = c(1:10))) |> gg_bars( "lastly_how_would_you_rate_your_own_coffee_expertise", "n", single_color = TRUE, base_size = 20, bar_label_type = scales::comma, y_label_type = scales::comma, bar_color = "steelblue")

df |> filter(!is.na(exp_group)) |> count(exp_group) |> mutate(perc = n / sum(n)) |> gg_bars( "exp_group", "perc", single_color = TRUE, base_size = 20, bar_color = "steelblue") 
```

As one would expect, as one becomes more expert, one spends more money. That was very true for me, wanting to get the is a black hole. Those who rate themself as a 1 or 2 spend less than \$20 a month. This suggests this group probably doesn't drink a lot of specialty coffee since a bag costs \$10-20 a bag. 

We find similar patterns when asked how much a participant spent on coffee equipment over the past five years. While James says having a good coffee grinder makes for a better coffee, a decent one does cost for than $100. Again, this suggests folks with '1-2' coffee expertise most likely do not own one.
```{r}
# Ages by exeprtise? Not much difference
# df |> count(what_is_your_age, exp_group) |> group_by(what_is_your_age) |> mutate(perc = n / sum(n)) |> ggplot(aes(exp_group, perc)) + geom_col() + facet_wrap(~what_is_your_age) + theme_coffee(12)
# df |> group_by(what_is_your_age) |> summarise(mean_exp = mean(lastly_how_would_you_rate_your_own_coffee_expertise, na.rm = TRUE))

# More expertise, drink more coffee
# df |> count(how_many_cups_of_coffee_do_you_typically_drink_per_day, exp_group) |> group_by(how_many_cups_of_coffee_do_you_typically_drink_per_day) |> mutate(perc = n / sum(n)) |> ggplot(aes(exp_group, perc)) + geom_col() + facet_wrap(~how_many_cups_of_coffee_do_you_typically_drink_per_day) + theme_coffee(12)
```

```{r}
#| fig-height: 2.5
#| fig-cap: Money Spent Each Month on Coffee
# More expertise = more money spent, but not for the 10 expertise. Age with expertise??
# 10 - more likely to drink at home? with a pour over? Think get good value at cafe? Probably spent money in past 5 years?
df_money |> filter(!is.na(exp_group)) |> count(spend_each_month, exp_group) |> group_by(exp_group) |> mutate(perc = n / sum(n)) |> gg_bars( "exp_group", "perc", single_color = TRUE, bar_color = "steelblue") + facet_grid(~spend_each_month)
```

```{r}
#| fig-height: 2.5
#| fig-cap: Money Spent Past 5 Years on Coffee Equipment
# nearly all do pourover or perhaps they work in industry, do spend a lot in the past 5 years
# many prefer Coffee D
# df |> filter(lastly_how_would_you_rate_your_own_coffee_expertise == 10)
# age by expertise - spread across
df_money |> filter(!is.na(exp_group), !spend_5_years == "") |> count(spend_5_years, exp_group) |> group_by(exp_group) |> mutate(perc = n / sum(n), spend_5_years = factor(spend_5_years, levels = money_month)) |> gg_bars( "exp_group", "perc",  single_color = TRUE, bar_color = "steelblue") + facet_grid(~spend_5_years)

  # ggplot(aes(exp_group, perc)) + geom_col() + facet_wrap(~spend_5_years) + theme_coffee(12) + geom_text(
  #     aes(label = perc),
  #     color = "green",
  #     fontface = "bold",
  #     vjust = -0.4
  #   )
```

## Coffee Cupping

[Coffee A]{.coffeea} and [Coffee D]{.coffeed} were rated as being slightly less bitter

```{r}
#| fig-height: 2.5
#| fig-cap: Coffee Bitterness
# Coffee A and <p class = .coffeed>Coffee D</p> were rated as being slightly less bitter
bitter_count <- purrr::map(
 c("coffee_a_bitterness", "coffee_b_bitterness", "coffee_c_bitterness", "coffee_d_bitterness"),
  ~ count(df, score = .data[[.x]]) |> mutate(perc = n/sum(n), type = .x)
)

purrr::reduce(bitter_count, bind_rows) |> tidyr::pivot_longer(cols = "type") |> mutate(type = paste("Coffee",toupper(substr(value, 8,8)))) |> filter(!is.na(score)) |> gg_bars( "score", "perc", "type") + facet_grid(~type) + scale_color_manual(values = coffee_pal) + scale_fill_manual(values = coffee_pal)
```

```{r}
#| fig-height: 2.5
#| fig-cap: Coffee Acidity
acid_count <- purrr::map(
 c("coffee_a_acidity", "coffee_b_acidity", "coffee_c_acidity", "coffee_d_acidity"),
  ~ count(df, score = .data[[.x]]) |> mutate(perc = n/sum(n), type = .x)
)
# max_x = max(df[[y_axis]], na.rm = TRUE)
purrr::reduce(acid_count, bind_rows) |> tidyr::pivot_longer(cols = "type") |> mutate(type = paste("Coffee", toupper(substr(value, 8,8)))) |> filter(!is.na(score)) |> gg_bars( "score", "perc", "type") + facet_grid(~type) + scale_color_manual(values = coffee_pal) + scale_fill_manual(values = coffee_pal)
```

```{r means}
#| fig-cap: 
#|   - cation 1
#|   - caption 2
#| fig-subcap: 
#|   - sub1
#|   - sub2
mean_bitter = purrr::map(
    c("coffee_a_bitterness", "coffee_b_bitterness", "coffee_c_bitterness", "coffee_d_bitterness"),
    ~ summarize(df, "Mean Bitterness" = mean(.data[[.x]], na.rm =TRUE), "Standard Deviation" =sd(.data[[.x]], na.rm =TRUE)) |> mutate(Coffee = paste("Coffee",toupper(substr(.x, 8,8))))
) |> bind_rows()

bitter_table = mean_bitter |>  gt() |> gt_theme_538() |> gt_add_coffee_color("Coffee") |> gt::fmt_number() |> cols_move(c("Mean Bitterness", "Standard Deviation"), after = "Coffee")

mean_acid = purrr::map(
    c("coffee_a_acidity", "coffee_b_acidity", "coffee_c_acidity", "coffee_d_acidity"),
    ~ summarize(df, "Mean Acidity" = mean(.data[[.x]], na.rm =TRUE), "Standard Deviation" =sd(.data[[.x]], na.rm =TRUE)) |> mutate(Coffee = paste("Coffee",toupper(substr(.x, 8,8))))
) |> bind_rows()

acid_table = mean_acid |>  gt() |> gt_theme_538() |> gt_add_coffee_color("Coffee") |> gt::fmt_number() |> cols_move(c("Mean Acidity", "Standard Deviation"), after = "Coffee")
gtExtras::gt_two_column_layout(list(bitter_table, acid_table))
```

```{r ttests}
#| fig-subcap: conf.level = 0.95, statistical significane at the 5 percent levels
#| fig-cap: T-tests to 
bc_ttest = t.test(df[, coffee_c_bitterness], df[, coffee_b_bitterness], alternative = "greater")
ad_ttest = t.test(df[, coffee_d_bitterness], df[, coffee_a_bitterness], alternative = "greater")
# scales::comma(bc_ttest$p.value, accuracy = .001)
ad_acid_test = t.test(df[, coffee_d_acidity], df[, coffee_a_acidity], "greater")
bc_acid_test = t.test(df[, coffee_c_acidity], df[, coffee_b_acidity], "greater")
# conf.level = 0.95, statistical significane at the 5 percent levels
data.frame("Type" = c("Bitterness"), "H0 Coffee" = c("Coffee A > Coffee B"), type= "Greater Avg", "p-value for t-test" = c(bc_ttest$p.value)) |> gt()
```

Most of us have probably seen tasting notes when it comes to purchasing coffee (i.e. grapefruit, chocolate) but are these actually descriptive? Would someone describe similar notes of the same coffee? Is there a relationship between tasting notes and roast levels?

To start, participants were asked to rate the level of bitterness and acidity of each coffee from a scale of 1 -5. Average bitterness among the four coffees show that [Coffee A]{.coffeea} and [Coffee B]{.coffeeb} were similar while [Coffee C]{.coffeec} and [Coffee D]{.coffeed} were also similar. However, a two-sided t-test show that the average may be different (p = xx).

Again, for acidity, we have similar patterns.

After participants ranked the level of bitterness and acidity, they were all asked to go a bit deeper.

::: {.callout-note appearance="simple"}
What does the coffee remind you of?
:::

So how can one describe the flavors?

Roast levels, processing method, region, elevation, variety, all play a role in the coffee tasting experience. Below is a flavor wheel, a tool to help identify words for one's taste buds.

(wheel)
This cupping live stream demonstrates there's actually some commonalities between tasting by the cupping participants.

Participants were asked to describe the coffee flavors in an open text field. I did a text analysis by identifying and counting key flavor words, such as 'bright' or 'grapefruit.' I took the **top 25 most frequent words** and made a **word cloud.** The larger the word, the frequent the word was mentioned (note-the count is in the hover text).

[Coffee A]{.coffeea} conjures up images of something light and fruity. While [Coffee B]{.coffeeb} and [Coffee C]{.coffeec} using 'chocolate' and 'nutty' as common descriptors and a few even described it as burnt. [Coffee C]{.coffeec} has more of a spread in word counts.

[Coffee D]{.coffeed}, however, paints a different image. 'Fermented' and 'funky' made it to the top - given this was a natural processed coffee this is not surprising!

<div id="parent">
<div id="child-left">
<p class="wc_cap">[Coffee A]{.coffeea}: Fruity: 616 Respondents</p>
<iframe src = "/assets/widgets/a.html" width = "100%" height = "200"></iframe></div>
<div id="child-right">
<p class="wc_cap">[Coffee B]{.coffeeb}: Chocolate: 600 Respondents</p>
<iframe src = "/assets/widgets/b.html" width = "100%" height = "200"></iframe></div>
</div>

<div id="parent">
<div id="child-left">
<p class="wc_cap">[Coffee C]{.coffeec}: Chocolate: 332 Respondents</p>
<iframe src = "/assets/widgets/c.html" width = "80%" height = "170"></iframe></div>
<div id="child-right">
<p class="wc_cap">[Coffee D]{.coffeed}: Fruity: 1,085 Respondents</p>
<iframe src = "/assets/widgets/d.html" width = "100%" height = "200"></iframe></div>
</div>

Okay - so let's see how these tasting notes match up on the flavor wheel. 'Acid', 'Bitter', 'Sweet', 'Fruity', and 'Chocolate' are generic words used to describe all 4 coffees. However, they were used at different frequencies as demonstrated in the word clouds. Looking at the yellow sectors, we do see a pattern for [Coffee A]{.coffeea} and [Coffee D]{.coffeed} compared to [Coffee B]{.coffeeb} and [Coffee C]{.coffeec}. 

```{r text analysis}
#| fig-cap: Most common words for Coffee D
coffee_a_words = count_cupping_notes(df$coffee_a_notes, count_min = 20)
coffee_b_words = count_cupping_notes(df$coffee_b_notes, count_min = 20)
coffee_c_words = count_cupping_notes(df$coffee_c_notes, count_min = 20)
coffee_d_words = count_cupping_notes(df$coffee_d_notes, count_min = 20)

# x = select(df, ends_with("notes"))
# paste0(names(coffee_a_words[1]), ": ", coffee_a_words[1][[1]])
# paste0(names(coffee_b_words[1]), ": ", coffee_b_words[1][[1]])
# paste0(names(coffee_c_words[1]), ": ", coffee_c_words[1][[1]])
# paste0(names(coffee_d_words[1]), ": ", coffee_d_words[1][[1]])
```

```{r}
#| fig-cap: "Overlapping Taste Notes"
all_top = purrr::reduce(
  list(
    coffee_a_words[1:25] |> prepare_words(color = "#ff3d19") |> mutate(coffee = "A"),
    coffee_b_words[1:25] |> prepare_words(color = "#ff3d19") |> mutate(coffee = "B"),
    coffee_c_words[1:25] |> prepare_words(color = "#ff3d19") |> mutate(coffee = "C"),
    coffee_d_words[1:25] |> prepare_words(color = "#ff3d19") |> mutate(coffee = "D")
  ),
  bind_rows
)

# Used to save wordcloud
all_top = all_top |> tidyr::pivot_wider(names_from = coffee, values_from = coffee ) |> mutate_at(1:6, ~tidyr::replace_na(., replace = " ")) |> mutate(match_coffee = paste0(`A`, `B`, `C`, `D`, sep = "")) 
# TODO function should have a color argument
all_top |> coffee_words_join(cup_notes, color = "#e5e5e5") |> 
  left_join(y = match_colors, by = c("match_coffee" = "ids")) |> 
  coffee_sunburst(mcolor = ~color2, hover = ~match_coffee)
```

```{r}
#| layout-ncol: 2
#| eval: false
#| height: 400px

  cup_notes <-
    cup_notes |> mutate(new_label = paste0(
      "<b>",
      end_name,
      ": ",
      "</b>",
      ifelse(is.na(labels), "", stringr::str_wrap(labels, width = 30))
    ))

coffee_a_words[1:25] |> prepare_words(color = "#ff3d19") |> coffee_words_join(cup_notes, color = "#e5e5e5") |> coffee_sunburst()
coffee_b_words[1:25] |> prepare_words(color = "#ff3d19") |> coffee_words_join(cup_notes, color = "#e5e5e5") |> coffee_sunburst()
```

## Which Was the Best?

[^1]: https://datareportal.com/essential-youtube-stats
[^2]: https://www.statista.com/statistics/810461/us-youtube-reach-gender/
```{r}
#| fig-height: 2.5
#| fig-cap: Favorite Coffee by Experience Group
df |> count(exp_group, lastly_what_was_your_favorite_overall_coffee) |>
  filter(!is.na(exp_group) & lastly_what_was_your_favorite_overall_coffee != "") |> 
  reframe(perc = n/sum(n),lastly_what_was_your_favorite_overall_coffee, .by = exp_group)  |>
  gg_bars( "exp_group", "perc", "lastly_what_was_your_favorite_overall_coffee") + facet_grid(~lastly_what_was_your_favorite_overall_coffee) + scale_color_manual(values = coffee_pal) + scale_fill_manual(values = coffee_pal)
```


```{r}
#| eval: false
# df |> count(lastly_what_was_your_favorite_overall_coffee, political_affiliation) |> group_by(political_affiliation) |> mutate(perc = n / sum(n)) |> ggplot(aes(lastly_what_was_your_favorite_overall_coffee, perc)) + geom_col() + facet_wrap(~political_affiliation) + theme_coffee(8)

# Flavor profiles do match actual preferences! chi-squ?
df |> filter(lastly_what_was_your_favorite_overall_coffee != "") |>  count(before_today_s_tasting_which_of_the_following_best_described_what_kind_of_coffee_you_like, lastly_what_was_your_favorite_overall_coffee) |> group_by(lastly_what_was_your_favorite_overall_coffee) |> mutate(perc = n / sum(n)) |> ggplot(aes(before_today_s_tasting_which_of_the_following_best_described_what_kind_of_coffee_you_like, perc)) + geom_col() + facet_grid(rows = vars(lastly_what_was_your_favorite_overall_coffee)) + theme_coffee(8)

coffee_a = df |> filter(lastly_what_was_your_favorite_overall_coffee == "Coffee A") |> count(before_today_s_tasting_which_of_the_following_best_described_what_kind_of_coffee_you_like)
coffee_b = df |> filter(lastly_what_was_your_favorite_overall_coffee == "Coffee B") |> count(before_today_s_tasting_which_of_the_following_best_described_what_kind_of_coffee_you_like)
chisq.test(x = coffee_a$n, p = coffee_b$n, rescale.p = TRUE)
```


